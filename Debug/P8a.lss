
P8a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000372  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002fe  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800200  00800200  00000372  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000372  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  000003e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001156  00000000  00000000  00000444  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cb1  00000000  00000000  0000159a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c5  00000000  00000000  0000224b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00002710  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000570  00000000  00000000  000027f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001b8  00000000  00000000  00002d64  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00002f1c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
  46:	00 00       	nop
  48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	49 c0       	rjmp	.+146    	; 0x108 <__bad_interrupt>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a6 30       	cpi	r26, 0x06	; 6
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	85 d0       	rcall	.+266    	; 0x210 <main>
 106:	f9 c0       	rjmp	.+498    	; 0x2fa <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <UART0_Init>:
		putchar(*str);
	}
}

void itoa(char *str, uint16_t number, uint8_t base)
{
 10a:	22 e0       	ldi	r18, 0x02	; 2
 10c:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 110:	2b ef       	ldi	r18, 0xFB	; 251
 112:	20 93 c1 00 	sts	0x00C1, r18	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 116:	26 e0       	ldi	r18, 0x06	; 6
 118:	20 93 c2 00 	sts	0x00C2, r18	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 11c:	89 2b       	or	r24, r25
 11e:	39 f4       	brne	.+14     	; 0x12e <UART0_Init+0x24>
 120:	8f ec       	ldi	r24, 0xCF	; 207
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 128:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 12c:	08 95       	ret
 12e:	87 e6       	ldi	r24, 0x67	; 103
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 136:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 13a:	08 95       	ret

0000013c <UART0_getchar>:
 13c:	e0 ec       	ldi	r30, 0xC0	; 192
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	88 23       	and	r24, r24
 144:	ec f7       	brge	.-6      	; 0x140 <UART0_getchar+0x4>
 146:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 14a:	08 95       	ret

0000014c <UART0_putchar>:
 14c:	e0 ec       	ldi	r30, 0xC0	; 192
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	90 81       	ld	r25, Z
 152:	95 ff       	sbrs	r25, 5
 154:	fd cf       	rjmp	.-6      	; 0x150 <UART0_putchar+0x4>
 156:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 15a:	08 95       	ret

0000015c <UART0_gets>:
 15c:	cf 93       	push	r28
 15e:	df 93       	push	r29
 160:	ec 01       	movw	r28, r24
 162:	ec df       	rcall	.-40     	; 0x13c <UART0_getchar>
 164:	8a 30       	cpi	r24, 0x0A	; 10
 166:	11 f0       	breq	.+4      	; 0x16c <UART0_gets+0x10>
 168:	89 93       	st	Y+, r24
 16a:	fb cf       	rjmp	.-10     	; 0x162 <UART0_gets+0x6>
 16c:	18 82       	st	Y, r1
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	08 95       	ret

00000174 <UART0_puts>:
 174:	0f 93       	push	r16
 176:	1f 93       	push	r17
 178:	cf 93       	push	r28
 17a:	df 93       	push	r29
 17c:	ec 01       	movw	r28, r24
 17e:	21 96       	adiw	r28, 0x01	; 1
 180:	fc 01       	movw	r30, r24
 182:	80 81       	ld	r24, Z
 184:	88 23       	and	r24, r24
 186:	41 f0       	breq	.+16     	; 0x198 <UART0_puts+0x24>
 188:	8e 01       	movw	r16, r28
 18a:	89 91       	ld	r24, Y+
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	74 d0       	rcall	.+232    	; 0x278 <putchar>
 190:	f8 01       	movw	r30, r16
 192:	80 81       	ld	r24, Z
 194:	81 11       	cpse	r24, r1
 196:	f8 cf       	rjmp	.-16     	; 0x188 <UART0_puts+0x14>
 198:	df 91       	pop	r29
 19a:	cf 91       	pop	r28
 19c:	1f 91       	pop	r17
 19e:	0f 91       	pop	r16
 1a0:	08 95       	ret

000001a2 <inMTTY>:
{
}*/

void inMTTY()
{
	UART0_putchar('U');
 1a2:	85 e5       	ldi	r24, 0x55	; 85
	UART0_putchar('N');
 1a4:	d3 df       	rcall	.-90     	; 0x14c <UART0_putchar>
	UART0_putchar('I');
 1a6:	8e e4       	ldi	r24, 0x4E	; 78
	UART0_putchar('V');
 1a8:	d1 df       	rcall	.-94     	; 0x14c <UART0_putchar>
	UART0_putchar('E');
 1aa:	89 e4       	ldi	r24, 0x49	; 73
	UART0_putchar('R');
 1ac:	cf df       	rcall	.-98     	; 0x14c <UART0_putchar>
	UART0_putchar('S');
 1ae:	86 e5       	ldi	r24, 0x56	; 86
	UART0_putchar('I');
 1b0:	cd df       	rcall	.-102    	; 0x14c <UART0_putchar>
	UART0_putchar('D');
 1b2:	85 e4       	ldi	r24, 0x45	; 69
	UART0_putchar('A');
 1b4:	cb df       	rcall	.-106    	; 0x14c <UART0_putchar>
	UART0_putchar('D');
 1b6:	82 e5       	ldi	r24, 0x52	; 82
	UART0_putchar(' ');
 1b8:	c9 df       	rcall	.-110    	; 0x14c <UART0_putchar>
	UART0_putchar('A');
 1ba:	83 e5       	ldi	r24, 0x53	; 83
	UART0_putchar('U');
 1bc:	c7 df       	rcall	.-114    	; 0x14c <UART0_putchar>
	
	UART0_putchar('P');
 1be:	89 e4       	ldi	r24, 0x49	; 73
	UART0_putchar('R');
 1c0:	c5 df       	rcall	.-118    	; 0x14c <UART0_putchar>
	UART0_putchar('A');
 1c2:	84 e4       	ldi	r24, 0x44	; 68
	UART0_putchar('C');
 1c4:	c3 df       	rcall	.-122    	; 0x14c <UART0_putchar>
	UART0_putchar('T');
 1c6:	81 e4       	ldi	r24, 0x41	; 65
 1c8:	c1 df       	rcall	.-126    	; 0x14c <UART0_putchar>
 1ca:	84 e4       	ldi	r24, 0x44	; 68
	UART0_putchar('I');
 1cc:	bf df       	rcall	.-130    	; 0x14c <UART0_putchar>
 1ce:	80 e2       	ldi	r24, 0x20	; 32
 1d0:	bd df       	rcall	.-134    	; 0x14c <UART0_putchar>
	UART0_putchar('C');
 1d2:	81 e4       	ldi	r24, 0x41	; 65
 1d4:	bb df       	rcall	.-138    	; 0x14c <UART0_putchar>
 1d6:	85 e5       	ldi	r24, 0x55	; 85
	UART0_putchar('A');
 1d8:	b9 df       	rcall	.-142    	; 0x14c <UART0_putchar>
 1da:	80 e5       	ldi	r24, 0x50	; 80
 1dc:	b7 df       	rcall	.-146    	; 0x14c <UART0_putchar>
	UART0_putchar(' ');
 1de:	82 e5       	ldi	r24, 0x52	; 82
 1e0:	b5 df       	rcall	.-150    	; 0x14c <UART0_putchar>
 1e2:	81 e4       	ldi	r24, 0x41	; 65
	UART0_putchar('8');
 1e4:	b3 df       	rcall	.-154    	; 0x14c <UART0_putchar>
 1e6:	83 e4       	ldi	r24, 0x43	; 67
 1e8:	b1 df       	rcall	.-158    	; 0x14c <UART0_putchar>
	UART0_putchar('a');
 1ea:	84 e5       	ldi	r24, 0x54	; 84
 1ec:	af df       	rcall	.-162    	; 0x14c <UART0_putchar>
 1ee:	89 e4       	ldi	r24, 0x49	; 73
	
	UART0_putchar(10);
 1f0:	ad df       	rcall	.-166    	; 0x14c <UART0_putchar>
 1f2:	83 e4       	ldi	r24, 0x43	; 67
 1f4:	ab df       	rcall	.-170    	; 0x14c <UART0_putchar>
	UART0_putchar(13);
 1f6:	81 e4       	ldi	r24, 0x41	; 65
 1f8:	a9 df       	rcall	.-174    	; 0x14c <UART0_putchar>
 1fa:	80 e2       	ldi	r24, 0x20	; 32
 1fc:	a7 df       	rcall	.-178    	; 0x14c <UART0_putchar>
 1fe:	88 e3       	ldi	r24, 0x38	; 56
 200:	a5 df       	rcall	.-182    	; 0x14c <UART0_putchar>
 202:	81 e6       	ldi	r24, 0x61	; 97
 204:	a3 df       	rcall	.-186    	; 0x14c <UART0_putchar>
 206:	8a e0       	ldi	r24, 0x0A	; 10
 208:	a1 df       	rcall	.-190    	; 0x14c <UART0_putchar>
 20a:	8d e0       	ldi	r24, 0x0D	; 13
 20c:	9f cf       	rjmp	.-194    	; 0x14c <UART0_putchar>
 20e:	08 95       	ret

00000210 <main>:
void UART0_putchar(char data);
void UART0_puts(char *str);
void inMTTY();

int main(void) 
{ 
 210:	cf 93       	push	r28
 212:	df 93       	push	r29
 214:	cd b7       	in	r28, 0x3d	; 61
 216:	de b7       	in	r29, 0x3e	; 62
 218:	64 97       	sbiw	r28, 0x14	; 20
 21a:	0f b6       	in	r0, 0x3f	; 63
 21c:	f8 94       	cli
 21e:	de bf       	out	0x3e, r29	; 62
 220:	0f be       	out	0x3f, r0	; 63
 222:	cd bf       	out	0x3d, r28	; 61
	char cad[20];
	uint16_t num;
	UART0_Init(0);
 224:	80 e0       	ldi	r24, 0x00	; 0
	
	UART0_getchar();
 226:	90 e0       	ldi	r25, 0x00	; 0
	inMTTY();
 228:	70 df       	rcall	.-288    	; 0x10a <UART0_Init>
	UART0_gets(cad);
 22a:	88 df       	rcall	.-240    	; 0x13c <UART0_getchar>
 22c:	ba df       	rcall	.-140    	; 0x1a2 <inMTTY>
	
	UART0_putchar(10);
 22e:	ce 01       	movw	r24, r28
	UART0_putchar(10);
 230:	01 96       	adiw	r24, 0x01	; 1
	UART0_putchar(13);
 232:	94 df       	rcall	.-216    	; 0x15c <UART0_gets>
 234:	8a e0       	ldi	r24, 0x0A	; 10
	
	UART0_putchar('E');
 236:	8a df       	rcall	.-236    	; 0x14c <UART0_putchar>
	
	UART0_putchar(10);
 238:	8a e0       	ldi	r24, 0x0A	; 10
	UART0_putchar(13);
 23a:	88 df       	rcall	.-240    	; 0x14c <UART0_putchar>
	UART0_puts(cad);
 23c:	8d e0       	ldi	r24, 0x0D	; 13
 23e:	86 df       	rcall	.-244    	; 0x14c <UART0_putchar>
 240:	85 e4       	ldi	r24, 0x45	; 69

	
	//==============================
	UART0_putchar(10);
 242:	84 df       	rcall	.-248    	; 0x14c <UART0_putchar>
 244:	8a e0       	ldi	r24, 0x0A	; 10
 246:	82 df       	rcall	.-252    	; 0x14c <UART0_putchar>
	UART0_putchar(10);
 248:	8d e0       	ldi	r24, 0x0D	; 13
 24a:	80 df       	rcall	.-256    	; 0x14c <UART0_putchar>
 24c:	ce 01       	movw	r24, r28
	UART0_putchar(10);
 24e:	01 96       	adiw	r24, 0x01	; 1
 250:	91 df       	rcall	.-222    	; 0x174 <UART0_puts>
 252:	8a e0       	ldi	r24, 0x0A	; 10
	UART0_putchar(13);
 254:	7b df       	rcall	.-266    	; 0x14c <UART0_putchar>
 256:	8a e0       	ldi	r24, 0x0A	; 10
 258:	79 df       	rcall	.-270    	; 0x14c <UART0_putchar>
}
 25a:	8a e0       	ldi	r24, 0x0A	; 10
 25c:	77 df       	rcall	.-274    	; 0x14c <UART0_putchar>
 25e:	8d e0       	ldi	r24, 0x0D	; 13
 260:	75 df       	rcall	.-278    	; 0x14c <UART0_putchar>
 262:	80 e0       	ldi	r24, 0x00	; 0
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	64 96       	adiw	r28, 0x14	; 20
 268:	0f b6       	in	r0, 0x3f	; 63
 26a:	f8 94       	cli
 26c:	de bf       	out	0x3e, r29	; 62
 26e:	0f be       	out	0x3f, r0	; 63
 270:	cd bf       	out	0x3d, r28	; 61
 272:	df 91       	pop	r29
 274:	cf 91       	pop	r28
 276:	08 95       	ret

00000278 <putchar>:
 278:	60 91 02 02 	lds	r22, 0x0202	; 0x800202 <_edata+0x2>
 27c:	70 91 03 02 	lds	r23, 0x0203	; 0x800203 <_edata+0x3>
 280:	00 c0       	rjmp	.+0      	; 0x282 <fputc>

00000282 <fputc>:
 282:	0f 93       	push	r16
 284:	1f 93       	push	r17
 286:	cf 93       	push	r28
 288:	df 93       	push	r29
 28a:	fb 01       	movw	r30, r22
 28c:	23 81       	ldd	r18, Z+3	; 0x03
 28e:	21 fd       	sbrc	r18, 1
 290:	03 c0       	rjmp	.+6      	; 0x298 <fputc+0x16>
 292:	8f ef       	ldi	r24, 0xFF	; 255
 294:	9f ef       	ldi	r25, 0xFF	; 255
 296:	2c c0       	rjmp	.+88     	; 0x2f0 <fputc+0x6e>
 298:	22 ff       	sbrs	r18, 2
 29a:	16 c0       	rjmp	.+44     	; 0x2c8 <fputc+0x46>
 29c:	46 81       	ldd	r20, Z+6	; 0x06
 29e:	57 81       	ldd	r21, Z+7	; 0x07
 2a0:	24 81       	ldd	r18, Z+4	; 0x04
 2a2:	35 81       	ldd	r19, Z+5	; 0x05
 2a4:	42 17       	cp	r20, r18
 2a6:	53 07       	cpc	r21, r19
 2a8:	44 f4       	brge	.+16     	; 0x2ba <fputc+0x38>
 2aa:	a0 81       	ld	r26, Z
 2ac:	b1 81       	ldd	r27, Z+1	; 0x01
 2ae:	9d 01       	movw	r18, r26
 2b0:	2f 5f       	subi	r18, 0xFF	; 255
 2b2:	3f 4f       	sbci	r19, 0xFF	; 255
 2b4:	31 83       	std	Z+1, r19	; 0x01
 2b6:	20 83       	st	Z, r18
 2b8:	8c 93       	st	X, r24
 2ba:	26 81       	ldd	r18, Z+6	; 0x06
 2bc:	37 81       	ldd	r19, Z+7	; 0x07
 2be:	2f 5f       	subi	r18, 0xFF	; 255
 2c0:	3f 4f       	sbci	r19, 0xFF	; 255
 2c2:	37 83       	std	Z+7, r19	; 0x07
 2c4:	26 83       	std	Z+6, r18	; 0x06
 2c6:	14 c0       	rjmp	.+40     	; 0x2f0 <fputc+0x6e>
 2c8:	8b 01       	movw	r16, r22
 2ca:	ec 01       	movw	r28, r24
 2cc:	fb 01       	movw	r30, r22
 2ce:	00 84       	ldd	r0, Z+8	; 0x08
 2d0:	f1 85       	ldd	r31, Z+9	; 0x09
 2d2:	e0 2d       	mov	r30, r0
 2d4:	19 95       	eicall
 2d6:	89 2b       	or	r24, r25
 2d8:	e1 f6       	brne	.-72     	; 0x292 <fputc+0x10>
 2da:	d8 01       	movw	r26, r16
 2dc:	16 96       	adiw	r26, 0x06	; 6
 2de:	8d 91       	ld	r24, X+
 2e0:	9c 91       	ld	r25, X
 2e2:	17 97       	sbiw	r26, 0x07	; 7
 2e4:	01 96       	adiw	r24, 0x01	; 1
 2e6:	17 96       	adiw	r26, 0x07	; 7
 2e8:	9c 93       	st	X, r25
 2ea:	8e 93       	st	-X, r24
 2ec:	16 97       	sbiw	r26, 0x06	; 6
 2ee:	ce 01       	movw	r24, r28
 2f0:	df 91       	pop	r29
 2f2:	cf 91       	pop	r28
 2f4:	1f 91       	pop	r17
 2f6:	0f 91       	pop	r16
 2f8:	08 95       	ret

000002fa <_exit>:
 2fa:	f8 94       	cli

000002fc <__stop_program>:
 2fc:	ff cf       	rjmp	.-2      	; 0x2fc <__stop_program>

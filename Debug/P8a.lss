
P8a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000408  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003b4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000408  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000438  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000478  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001500  00000000  00000000  000004f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000cd7  00000000  00000000  000019f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000068a  00000000  00000000  000026cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000140  00000000  00000000  00002d5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005b2  00000000  00000000  00002e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000432  00000000  00000000  0000344e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00003880  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	1e d1       	rcall	.+572    	; 0x332 <main>
  f6:	5c c1       	rjmp	.+696    	; 0x3b0 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <UART0_Init>:
		if(**str != '\0');{
			cont++;
		}
	}while(*str == '\0');
	return cont;
}
  fa:	22 e0       	ldi	r18, 0x02	; 2
  fc:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 100:	2b ef       	ldi	r18, 0xFB	; 251
 102:	20 93 c1 00 	sts	0x00C1, r18	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 106:	26 e0       	ldi	r18, 0x06	; 6
 108:	20 93 c2 00 	sts	0x00C2, r18	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 10c:	89 2b       	or	r24, r25
 10e:	39 f4       	brne	.+14     	; 0x11e <UART0_Init+0x24>
 110:	8f ec       	ldi	r24, 0xCF	; 207
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 118:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 11c:	08 95       	ret
 11e:	87 e6       	ldi	r24, 0x67	; 103
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 126:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 12a:	08 95       	ret

0000012c <UART0_getchar>:
 12c:	e0 ec       	ldi	r30, 0xC0	; 192
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	80 81       	ld	r24, Z
 132:	88 23       	and	r24, r24
 134:	ec f7       	brge	.-6      	; 0x130 <UART0_getchar+0x4>
 136:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 13a:	08 95       	ret

0000013c <UART0_putchar>:
 13c:	e0 ec       	ldi	r30, 0xC0	; 192
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	90 81       	ld	r25, Z
 142:	95 ff       	sbrs	r25, 5
 144:	fd cf       	rjmp	.-6      	; 0x140 <UART0_putchar+0x4>
 146:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 14a:	08 95       	ret

0000014c <UART0_gets>:
 14c:	ef 92       	push	r14
 14e:	ff 92       	push	r15
 150:	0f 93       	push	r16
 152:	1f 93       	push	r17
 154:	cf 93       	push	r28
 156:	7c 01       	movw	r14, r24
 158:	00 e0       	ldi	r16, 0x00	; 0
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	e7 df       	rcall	.-50     	; 0x12c <UART0_getchar>
 15e:	c8 2f       	mov	r28, r24
 160:	03 31       	cpi	r16, 0x13	; 19
 162:	11 05       	cpc	r17, r1
 164:	68 f4       	brcc	.+26     	; 0x180 <UART0_gets+0x34>
 166:	88 30       	cpi	r24, 0x08	; 8
 168:	69 f0       	breq	.+26     	; 0x184 <UART0_gets+0x38>
 16a:	8d 30       	cpi	r24, 0x0D	; 13
 16c:	f1 f0       	breq	.+60     	; 0x1aa <UART0_gets+0x5e>
 16e:	e6 df       	rcall	.-52     	; 0x13c <UART0_putchar>
 170:	f7 01       	movw	r30, r14
 172:	c0 83       	st	Z, r28
 174:	0f 5f       	subi	r16, 0xFF	; 255
 176:	1f 4f       	sbci	r17, 0xFF	; 255
 178:	c7 01       	movw	r24, r14
 17a:	01 96       	adiw	r24, 0x01	; 1
 17c:	7c 01       	movw	r14, r24
 17e:	ee cf       	rjmp	.-36     	; 0x15c <UART0_gets+0x10>
 180:	88 30       	cpi	r24, 0x08	; 8
 182:	89 f4       	brne	.+34     	; 0x1a6 <UART0_gets+0x5a>
 184:	01 15       	cp	r16, r1
 186:	11 05       	cpc	r17, r1
 188:	49 f3       	breq	.-46     	; 0x15c <UART0_gets+0x10>
 18a:	88 e0       	ldi	r24, 0x08	; 8
 18c:	d7 df       	rcall	.-82     	; 0x13c <UART0_putchar>
 18e:	80 e2       	ldi	r24, 0x20	; 32
 190:	d5 df       	rcall	.-86     	; 0x13c <UART0_putchar>
 192:	88 e0       	ldi	r24, 0x08	; 8
 194:	d3 df       	rcall	.-90     	; 0x13c <UART0_putchar>
 196:	f7 01       	movw	r30, r14
 198:	10 82       	st	Z, r1
 19a:	01 50       	subi	r16, 0x01	; 1
 19c:	11 09       	sbc	r17, r1
 19e:	c7 01       	movw	r24, r14
 1a0:	01 97       	sbiw	r24, 0x01	; 1
 1a2:	7c 01       	movw	r14, r24
 1a4:	db cf       	rjmp	.-74     	; 0x15c <UART0_gets+0x10>
 1a6:	8d 30       	cpi	r24, 0x0D	; 13
 1a8:	c9 f6       	brne	.-78     	; 0x15c <UART0_gets+0x10>
 1aa:	f7 01       	movw	r30, r14
 1ac:	10 82       	st	Z, r1
 1ae:	cf 91       	pop	r28
 1b0:	1f 91       	pop	r17
 1b2:	0f 91       	pop	r16
 1b4:	ff 90       	pop	r15
 1b6:	ef 90       	pop	r14
 1b8:	08 95       	ret

000001ba <UART0_puts>:
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	ec 01       	movw	r28, r24
 1c0:	88 81       	ld	r24, Y
 1c2:	88 23       	and	r24, r24
 1c4:	29 f0       	breq	.+10     	; 0x1d0 <UART0_puts+0x16>
 1c6:	21 96       	adiw	r28, 0x01	; 1
 1c8:	b9 df       	rcall	.-142    	; 0x13c <UART0_putchar>
 1ca:	89 91       	ld	r24, Y+
 1cc:	81 11       	cpse	r24, r1
 1ce:	fc cf       	rjmp	.-8      	; 0x1c8 <UART0_puts+0xe>
 1d0:	df 91       	pop	r29
 1d2:	cf 91       	pop	r28
 1d4:	08 95       	ret

000001d6 <itoa>:
 1d6:	0f 93       	push	r16
 1d8:	1f 93       	push	r17
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	36 2f       	mov	r19, r22
 1e0:	27 2f       	mov	r18, r23
 1e2:	fc 01       	movw	r30, r24
 1e4:	c4 2f       	mov	r28, r20
 1e6:	d0 e0       	ldi	r29, 0x00	; 0
 1e8:	8f 01       	movw	r16, r30
 1ea:	83 2f       	mov	r24, r19
 1ec:	92 2f       	mov	r25, r18
 1ee:	be 01       	movw	r22, r28
 1f0:	cb d0       	rcall	.+406    	; 0x388 <__udivmodhi4>
 1f2:	36 2f       	mov	r19, r22
 1f4:	27 2f       	mov	r18, r23
 1f6:	8a 30       	cpi	r24, 0x0A	; 10
 1f8:	91 05       	cpc	r25, r1
 1fa:	18 f0       	brcs	.+6      	; 0x202 <itoa+0x2c>
 1fc:	8f 5b       	subi	r24, 0xBF	; 191
 1fe:	9f 4f       	sbci	r25, 0xFF	; 255
 200:	01 c0       	rjmp	.+2      	; 0x204 <itoa+0x2e>
 202:	c0 96       	adiw	r24, 0x30	; 48
 204:	d8 01       	movw	r26, r16
 206:	8c 93       	st	X, r24
 208:	31 96       	adiw	r30, 0x01	; 1
 20a:	83 2f       	mov	r24, r19
 20c:	92 2f       	mov	r25, r18
 20e:	be 01       	movw	r22, r28
 210:	bb d0       	rcall	.+374    	; 0x388 <__udivmodhi4>
 212:	89 2b       	or	r24, r25
 214:	49 f3       	breq	.-46     	; 0x1e8 <itoa+0x12>
 216:	f8 01       	movw	r30, r16
 218:	11 82       	std	Z+1, r1	; 0x01
 21a:	df 91       	pop	r29
 21c:	cf 91       	pop	r28
 21e:	1f 91       	pop	r17
 220:	0f 91       	pop	r16
 222:	08 95       	ret

00000224 <inMTTY>:
void inMTTY()
{
	UART0_putchar('U');
 224:	85 e5       	ldi	r24, 0x55	; 85
	UART0_putchar('N');
 226:	8a df       	rcall	.-236    	; 0x13c <UART0_putchar>
	UART0_putchar('I');
 228:	8e e4       	ldi	r24, 0x4E	; 78
	UART0_putchar('V');
 22a:	88 df       	rcall	.-240    	; 0x13c <UART0_putchar>
	UART0_putchar('E');
 22c:	89 e4       	ldi	r24, 0x49	; 73
	UART0_putchar('R');
 22e:	86 df       	rcall	.-244    	; 0x13c <UART0_putchar>
	UART0_putchar('S');
 230:	86 e5       	ldi	r24, 0x56	; 86
	UART0_putchar('I');
 232:	84 df       	rcall	.-248    	; 0x13c <UART0_putchar>
	UART0_putchar('D');
 234:	85 e4       	ldi	r24, 0x45	; 69
	UART0_putchar('A');
 236:	82 df       	rcall	.-252    	; 0x13c <UART0_putchar>
	UART0_putchar('D');
 238:	82 e5       	ldi	r24, 0x52	; 82
	UART0_putchar(' ');
 23a:	80 df       	rcall	.-256    	; 0x13c <UART0_putchar>
	UART0_putchar('A');
 23c:	83 e5       	ldi	r24, 0x53	; 83
	UART0_putchar('U');
 23e:	7e df       	rcall	.-260    	; 0x13c <UART0_putchar>
	UART0_putchar('T');
 240:	89 e4       	ldi	r24, 0x49	; 73
	UART0_putchar('O');
 242:	7c df       	rcall	.-264    	; 0x13c <UART0_putchar>
	UART0_putchar('N');
 244:	84 e4       	ldi	r24, 0x44	; 68
	UART0_putchar('O');
 246:	7a df       	rcall	.-268    	; 0x13c <UART0_putchar>
	UART0_putchar('M');
 248:	81 e4       	ldi	r24, 0x41	; 65
	UART0_putchar('A');
 24a:	78 df       	rcall	.-272    	; 0x13c <UART0_putchar>
	UART0_putchar(' ');
 24c:	84 e4       	ldi	r24, 0x44	; 68
	UART0_putchar('D');
 24e:	76 df       	rcall	.-276    	; 0x13c <UART0_putchar>
	UART0_putchar('E');
 250:	80 e2       	ldi	r24, 0x20	; 32
	UART0_putchar(' ');
 252:	74 df       	rcall	.-280    	; 0x13c <UART0_putchar>
	UART0_putchar('B');
 254:	81 e4       	ldi	r24, 0x41	; 65
	UART0_putchar('A');
 256:	72 df       	rcall	.-284    	; 0x13c <UART0_putchar>
	UART0_putchar('J');
 258:	85 e5       	ldi	r24, 0x55	; 85
	UART0_putchar('A');
 25a:	70 df       	rcall	.-288    	; 0x13c <UART0_putchar>
	UART0_putchar(' ');
 25c:	84 e5       	ldi	r24, 0x54	; 84
	UART0_putchar('C');
 25e:	6e df       	rcall	.-292    	; 0x13c <UART0_putchar>
	UART0_putchar('A');
 260:	8f e4       	ldi	r24, 0x4F	; 79
	UART0_putchar('L');
 262:	6c df       	rcall	.-296    	; 0x13c <UART0_putchar>
	UART0_putchar('I');
 264:	8e e4       	ldi	r24, 0x4E	; 78
	UART0_putchar('F');
 266:	6a df       	rcall	.-300    	; 0x13c <UART0_putchar>
	UART0_putchar('O');
 268:	8f e4       	ldi	r24, 0x4F	; 79
	UART0_putchar('R');
 26a:	68 df       	rcall	.-304    	; 0x13c <UART0_putchar>
	UART0_putchar('N');
 26c:	8d e4       	ldi	r24, 0x4D	; 77
 26e:	66 df       	rcall	.-308    	; 0x13c <UART0_putchar>
 270:	81 e4       	ldi	r24, 0x41	; 65
	UART0_putchar('I');
 272:	64 df       	rcall	.-312    	; 0x13c <UART0_putchar>
 274:	80 e2       	ldi	r24, 0x20	; 32
 276:	62 df       	rcall	.-316    	; 0x13c <UART0_putchar>
	UART0_putchar('A');
 278:	84 e4       	ldi	r24, 0x44	; 68
 27a:	60 df       	rcall	.-320    	; 0x13c <UART0_putchar>
 27c:	85 e4       	ldi	r24, 0x45	; 69
	UART0_putchar(10);
 27e:	5e df       	rcall	.-324    	; 0x13c <UART0_putchar>
 280:	80 e2       	ldi	r24, 0x20	; 32
 282:	5c df       	rcall	.-328    	; 0x13c <UART0_putchar>
	UART0_putchar(13);	
 284:	82 e4       	ldi	r24, 0x42	; 66
 286:	5a df       	rcall	.-332    	; 0x13c <UART0_putchar>
 288:	81 e4       	ldi	r24, 0x41	; 65
	UART0_putchar('P');
 28a:	58 df       	rcall	.-336    	; 0x13c <UART0_putchar>
 28c:	8a e4       	ldi	r24, 0x4A	; 74
 28e:	56 df       	rcall	.-340    	; 0x13c <UART0_putchar>
	UART0_putchar('R');
 290:	81 e4       	ldi	r24, 0x41	; 65
 292:	54 df       	rcall	.-344    	; 0x13c <UART0_putchar>
 294:	80 e2       	ldi	r24, 0x20	; 32
	UART0_putchar('A');
 296:	52 df       	rcall	.-348    	; 0x13c <UART0_putchar>
 298:	83 e4       	ldi	r24, 0x43	; 67
 29a:	50 df       	rcall	.-352    	; 0x13c <UART0_putchar>
	UART0_putchar('C');
 29c:	81 e4       	ldi	r24, 0x41	; 65
 29e:	4e df       	rcall	.-356    	; 0x13c <UART0_putchar>
 2a0:	8c e4       	ldi	r24, 0x4C	; 76
	UART0_putchar('T');
 2a2:	4c df       	rcall	.-360    	; 0x13c <UART0_putchar>
 2a4:	89 e4       	ldi	r24, 0x49	; 73
 2a6:	4a df       	rcall	.-364    	; 0x13c <UART0_putchar>
	UART0_putchar('I');
 2a8:	86 e4       	ldi	r24, 0x46	; 70
 2aa:	48 df       	rcall	.-368    	; 0x13c <UART0_putchar>
 2ac:	8f e4       	ldi	r24, 0x4F	; 79
	UART0_putchar('C');
 2ae:	46 df       	rcall	.-372    	; 0x13c <UART0_putchar>
 2b0:	82 e5       	ldi	r24, 0x52	; 82
 2b2:	44 df       	rcall	.-376    	; 0x13c <UART0_putchar>
	UART0_putchar('A');
 2b4:	8e e4       	ldi	r24, 0x4E	; 78
 2b6:	42 df       	rcall	.-380    	; 0x13c <UART0_putchar>
 2b8:	89 e4       	ldi	r24, 0x49	; 73
	UART0_putchar(' ');
 2ba:	40 df       	rcall	.-384    	; 0x13c <UART0_putchar>
 2bc:	81 e4       	ldi	r24, 0x41	; 65
 2be:	3e df       	rcall	.-388    	; 0x13c <UART0_putchar>
	UART0_putchar('8');
 2c0:	8a e0       	ldi	r24, 0x0A	; 10
 2c2:	3c df       	rcall	.-392    	; 0x13c <UART0_putchar>
 2c4:	8d e0       	ldi	r24, 0x0D	; 13
	UART0_putchar('a');
 2c6:	3a df       	rcall	.-396    	; 0x13c <UART0_putchar>
 2c8:	80 e5       	ldi	r24, 0x50	; 80
 2ca:	38 df       	rcall	.-400    	; 0x13c <UART0_putchar>
	UART0_putchar(10);
 2cc:	82 e5       	ldi	r24, 0x52	; 82
 2ce:	36 df       	rcall	.-404    	; 0x13c <UART0_putchar>
 2d0:	81 e4       	ldi	r24, 0x41	; 65
	UART0_putchar(13);
 2d2:	34 df       	rcall	.-408    	; 0x13c <UART0_putchar>
 2d4:	83 e4       	ldi	r24, 0x43	; 67
 2d6:	32 df       	rcall	.-412    	; 0x13c <UART0_putchar>
 2d8:	84 e5       	ldi	r24, 0x54	; 84
 2da:	30 df       	rcall	.-416    	; 0x13c <UART0_putchar>
 2dc:	89 e4       	ldi	r24, 0x49	; 73
 2de:	2e df       	rcall	.-420    	; 0x13c <UART0_putchar>
 2e0:	83 e4       	ldi	r24, 0x43	; 67
 2e2:	2c df       	rcall	.-424    	; 0x13c <UART0_putchar>
 2e4:	81 e4       	ldi	r24, 0x41	; 65
 2e6:	2a df       	rcall	.-428    	; 0x13c <UART0_putchar>
 2e8:	80 e2       	ldi	r24, 0x20	; 32
 2ea:	28 df       	rcall	.-432    	; 0x13c <UART0_putchar>
 2ec:	88 e3       	ldi	r24, 0x38	; 56
 2ee:	26 df       	rcall	.-436    	; 0x13c <UART0_putchar>
 2f0:	81 e6       	ldi	r24, 0x61	; 97
 2f2:	24 df       	rcall	.-440    	; 0x13c <UART0_putchar>
 2f4:	8a e0       	ldi	r24, 0x0A	; 10
 2f6:	22 df       	rcall	.-444    	; 0x13c <UART0_putchar>
 2f8:	8d e0       	ldi	r24, 0x0D	; 13
 2fa:	20 cf       	rjmp	.-448    	; 0x13c <UART0_putchar>
 2fc:	08 95       	ret

000002fe <newLine>:
}
void newLine(){
	UART0_putchar(10);
 2fe:	8a e0       	ldi	r24, 0x0A	; 10
	UART0_putchar(13);
 300:	1d df       	rcall	.-454    	; 0x13c <UART0_putchar>
 302:	8d e0       	ldi	r24, 0x0D	; 13
 304:	1b cf       	rjmp	.-458    	; 0x13c <UART0_putchar>
 306:	08 95       	ret

00000308 <escrito_line>:
}
void escrito_line(){
	newLine();
 308:	fa df       	rcall	.-12     	; 0x2fe <newLine>
 30a:	f9 df       	rcall	.-14     	; 0x2fe <newLine>
 30c:	f8 df       	rcall	.-16     	; 0x2fe <newLine>
 30e:	83 e4       	ldi	r24, 0x43	; 67
 310:	15 df       	rcall	.-470    	; 0x13c <UART0_putchar>
 312:	81 e4       	ldi	r24, 0x41	; 65
 314:	13 df       	rcall	.-474    	; 0x13c <UART0_putchar>
 316:	84 e4       	ldi	r24, 0x44	; 68
 318:	11 df       	rcall	.-478    	; 0x13c <UART0_putchar>
 31a:	85 e4       	ldi	r24, 0x45	; 69
 31c:	0f df       	rcall	.-482    	; 0x13c <UART0_putchar>
 31e:	8e e4       	ldi	r24, 0x4E	; 78
 320:	0d df       	rcall	.-486    	; 0x13c <UART0_putchar>
 322:	81 e4       	ldi	r24, 0x41	; 65
 324:	0b df       	rcall	.-490    	; 0x13c <UART0_putchar>
 326:	8a e3       	ldi	r24, 0x3A	; 58
 328:	09 df       	rcall	.-494    	; 0x13c <UART0_putchar>
 32a:	80 e2       	ldi	r24, 0x20	; 32
 32c:	07 df       	rcall	.-498    	; 0x13c <UART0_putchar>
 32e:	e7 cf       	rjmp	.-50     	; 0x2fe <newLine>
 330:	08 95       	ret

00000332 <main>:
 332:	cf 93       	push	r28
 334:	df 93       	push	r29
 336:	cd b7       	in	r28, 0x3d	; 61
 338:	de b7       	in	r29, 0x3e	; 62
 33a:	6e 97       	sbiw	r28, 0x1e	; 30
 33c:	0f b6       	in	r0, 0x3f	; 63
 33e:	f8 94       	cli
 340:	de bf       	out	0x3e, r29	; 62
 342:	0f be       	out	0x3f, r0	; 63
 344:	cd bf       	out	0x3d, r28	; 61
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	d7 de       	rcall	.-594    	; 0xfa <UART0_Init>
 34c:	6b df       	rcall	.-298    	; 0x224 <inMTTY>
 34e:	ce 01       	movw	r24, r28
 350:	01 96       	adiw	r24, 0x01	; 1
 352:	fc de       	rcall	.-520    	; 0x14c <UART0_gets>
 354:	d9 df       	rcall	.-78     	; 0x308 <escrito_line>
 356:	ce 01       	movw	r24, r28
 358:	01 96       	adiw	r24, 0x01	; 1
 35a:	2f df       	rcall	.-418    	; 0x1ba <UART0_puts>
 35c:	40 e1       	ldi	r20, 0x10	; 16
 35e:	50 e0       	ldi	r21, 0x00	; 0
 360:	6f ef       	ldi	r22, 0xFF	; 255
 362:	70 e0       	ldi	r23, 0x00	; 0
 364:	ce 01       	movw	r24, r28
 366:	45 96       	adiw	r24, 0x15	; 21
 368:	36 df       	rcall	.-404    	; 0x1d6 <itoa>
 36a:	c9 df       	rcall	.-110    	; 0x2fe <newLine>
 36c:	ce 01       	movw	r24, r28
 36e:	45 96       	adiw	r24, 0x15	; 21
 370:	24 df       	rcall	.-440    	; 0x1ba <UART0_puts>
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	6e 96       	adiw	r28, 0x1e	; 30
 378:	0f b6       	in	r0, 0x3f	; 63
 37a:	f8 94       	cli
 37c:	de bf       	out	0x3e, r29	; 62
 37e:	0f be       	out	0x3f, r0	; 63
 380:	cd bf       	out	0x3d, r28	; 61
 382:	df 91       	pop	r29
 384:	cf 91       	pop	r28
 386:	08 95       	ret

00000388 <__udivmodhi4>:
 388:	aa 1b       	sub	r26, r26
 38a:	bb 1b       	sub	r27, r27
 38c:	51 e1       	ldi	r21, 0x11	; 17
 38e:	07 c0       	rjmp	.+14     	; 0x39e <__udivmodhi4_ep>

00000390 <__udivmodhi4_loop>:
 390:	aa 1f       	adc	r26, r26
 392:	bb 1f       	adc	r27, r27
 394:	a6 17       	cp	r26, r22
 396:	b7 07       	cpc	r27, r23
 398:	10 f0       	brcs	.+4      	; 0x39e <__udivmodhi4_ep>
 39a:	a6 1b       	sub	r26, r22
 39c:	b7 0b       	sbc	r27, r23

0000039e <__udivmodhi4_ep>:
 39e:	88 1f       	adc	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	5a 95       	dec	r21
 3a4:	a9 f7       	brne	.-22     	; 0x390 <__udivmodhi4_loop>
 3a6:	80 95       	com	r24
 3a8:	90 95       	com	r25
 3aa:	bc 01       	movw	r22, r24
 3ac:	cd 01       	movw	r24, r26
 3ae:	08 95       	ret

000003b0 <_exit>:
 3b0:	f8 94       	cli

000003b2 <__stop_program>:
 3b2:	ff cf       	rjmp	.-2      	; 0x3b2 <__stop_program>
